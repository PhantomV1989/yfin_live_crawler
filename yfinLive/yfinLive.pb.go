// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0-devel
// 	protoc        v3.6.0
// source: yfinLive.proto

package yfinLive

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion3

type YfinWS struct {
	// state         protoimpl.MessageState
	// sizeCache     protoimpl.SizeCache
	// unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price             float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	Time              int64   `protobuf:"zigzag64,3,opt,name=time,proto3" json:"time,omitempty"`
	Currency          string  `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Exchange          string  `protobuf:"bytes,5,opt,name=exchange,proto3" json:"exchange,omitempty"`
	QuoteType         int32   `protobuf:"varint,6,opt,name=quoteType,proto3" json:"quoteType,omitempty"`
	MarketHours       int32   `protobuf:"varint,7,opt,name=marketHours,proto3" json:"marketHours,omitempty"`
	ChangePercent     float32 `protobuf:"fixed32,8,opt,name=changePercent,proto3" json:"changePercent,omitempty"`
	DayVolume         int64   `protobuf:"zigzag64,9,opt,name=dayVolume,proto3" json:"dayVolume,omitempty"`
	DayHigh           float32 `protobuf:"fixed32,10,opt,name=dayHigh,proto3" json:"dayHigh,omitempty"`
	DayLow            float32 `protobuf:"fixed32,11,opt,name=dayLow,proto3" json:"dayLow,omitempty"`
	Change            float32 `protobuf:"fixed32,12,opt,name=change,proto3" json:"change,omitempty"`
	ShortName         string  `protobuf:"bytes,13,opt,name=shortName,proto3" json:"shortName,omitempty"`
	ExpireDate        int64   `protobuf:"zigzag64,14,opt,name=expireDate,proto3" json:"expireDate,omitempty"`
	OpenPrice         float32 `protobuf:"fixed32,15,opt,name=openPrice,proto3" json:"openPrice,omitempty"`
	PreviousClose     float32 `protobuf:"fixed32,16,opt,name=previousClose,proto3" json:"previousClose,omitempty"`
	StrikePrice       float32 `protobuf:"fixed32,17,opt,name=strikePrice,proto3" json:"strikePrice,omitempty"`
	UnderlyingSymbol  string  `protobuf:"bytes,18,opt,name=underlyingSymbol,proto3" json:"underlyingSymbol,omitempty"`
	OpenInterest      int64   `protobuf:"zigzag64,19,opt,name=openInterest,proto3" json:"openInterest,omitempty"`
	OptionsType       int64   `protobuf:"zigzag64,20,opt,name=optionsType,proto3" json:"optionsType,omitempty"`
	MiniOption        int64   `protobuf:"zigzag64,21,opt,name=miniOption,proto3" json:"miniOption,omitempty"`
	LastSize          int64   `protobuf:"zigzag64,22,opt,name=lastSize,proto3" json:"lastSize,omitempty"`
	Bid               float32 `protobuf:"fixed32,23,opt,name=bid,proto3" json:"bid,omitempty"`
	BidSize           float32 `protobuf:"fixed32,24,opt,name=bidSize,proto3" json:"bidSize,omitempty"`
	Ask               float32 `protobuf:"fixed32,25,opt,name=ask,proto3" json:"ask,omitempty"`
	AskSize           float32 `protobuf:"fixed32,26,opt,name=askSize,proto3" json:"askSize,omitempty"`
	PriceHint         int64   `protobuf:"zigzag64,27,opt,name=priceHint,proto3" json:"priceHint,omitempty"`
	Vol24Hr           int64   `protobuf:"zigzag64,28,opt,name=vol24hr,proto3" json:"vol24hr,omitempty"`
	VolAllCurrencies  int64   `protobuf:"zigzag64,29,opt,name=volAllCurrencies,proto3" json:"volAllCurrencies,omitempty"`
	Fromcurrency      string  `protobuf:"bytes,30,opt,name=fromcurrency,proto3" json:"fromcurrency,omitempty"`
	LastMarket        string  `protobuf:"bytes,31,opt,name=lastMarket,proto3" json:"lastMarket,omitempty"`
	CirculatingSupply float64 `protobuf:"fixed64,32,opt,name=circulatingSupply,proto3" json:"circulatingSupply,omitempty"`
	Marketcap         float64 `protobuf:"fixed64,33,opt,name=marketcap,proto3" json:"marketcap,omitempty"`
}

func (x *YfinWS) Reset() {
	*x = YfinWS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yfinLive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YfinWS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YfinWS) ProtoMessage() {}

func (x *YfinWS) ProtoReflect() protoreflect.Message {
	mi := &file_yfinLive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YfinWS.ProtoReflect.Descriptor instead.
func (*YfinWS) Descriptor() ([]byte, []int) {
	return file_yfinLive_proto_rawDescGZIP(), []int{0}
}

func (x *YfinWS) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *YfinWS) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *YfinWS) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *YfinWS) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *YfinWS) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *YfinWS) GetQuoteType() int32 {
	if x != nil {
		return x.QuoteType
	}
	return 0
}

func (x *YfinWS) GetMarketHours() int32 {
	if x != nil {
		return x.MarketHours
	}
	return 0
}

func (x *YfinWS) GetChangePercent() float32 {
	if x != nil {
		return x.ChangePercent
	}
	return 0
}

func (x *YfinWS) GetDayVolume() int64 {
	if x != nil {
		return x.DayVolume
	}
	return 0
}

func (x *YfinWS) GetDayHigh() float32 {
	if x != nil {
		return x.DayHigh
	}
	return 0
}

func (x *YfinWS) GetDayLow() float32 {
	if x != nil {
		return x.DayLow
	}
	return 0
}

func (x *YfinWS) GetChange() float32 {
	if x != nil {
		return x.Change
	}
	return 0
}

func (x *YfinWS) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *YfinWS) GetExpireDate() int64 {
	if x != nil {
		return x.ExpireDate
	}
	return 0
}

func (x *YfinWS) GetOpenPrice() float32 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *YfinWS) GetPreviousClose() float32 {
	if x != nil {
		return x.PreviousClose
	}
	return 0
}

func (x *YfinWS) GetStrikePrice() float32 {
	if x != nil {
		return x.StrikePrice
	}
	return 0
}

func (x *YfinWS) GetUnderlyingSymbol() string {
	if x != nil {
		return x.UnderlyingSymbol
	}
	return ""
}

func (x *YfinWS) GetOpenInterest() int64 {
	if x != nil {
		return x.OpenInterest
	}
	return 0
}

func (x *YfinWS) GetOptionsType() int64 {
	if x != nil {
		return x.OptionsType
	}
	return 0
}

func (x *YfinWS) GetMiniOption() int64 {
	if x != nil {
		return x.MiniOption
	}
	return 0
}

func (x *YfinWS) GetLastSize() int64 {
	if x != nil {
		return x.LastSize
	}
	return 0
}

func (x *YfinWS) GetBid() float32 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *YfinWS) GetBidSize() float32 {
	if x != nil {
		return x.BidSize
	}
	return 0
}

func (x *YfinWS) GetAsk() float32 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *YfinWS) GetAskSize() float32 {
	if x != nil {
		return x.AskSize
	}
	return 0
}

func (x *YfinWS) GetPriceHint() int64 {
	if x != nil {
		return x.PriceHint
	}
	return 0
}

func (x *YfinWS) GetVol24Hr() int64 {
	if x != nil {
		return x.Vol24Hr
	}
	return 0
}

func (x *YfinWS) GetVolAllCurrencies() int64 {
	if x != nil {
		return x.VolAllCurrencies
	}
	return 0
}

func (x *YfinWS) GetFromcurrency() string {
	if x != nil {
		return x.Fromcurrency
	}
	return ""
}

func (x *YfinWS) GetLastMarket() string {
	if x != nil {
		return x.LastMarket
	}
	return ""
}

func (x *YfinWS) GetCirculatingSupply() float64 {
	if x != nil {
		return x.CirculatingSupply
	}
	return 0
}

func (x *YfinWS) GetMarketcap() float64 {
	if x != nil {
		return x.Marketcap
	}
	return 0
}

var File_yfinLive_proto protoreflect.FileDescriptor

var file_yfinLive_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x79, 0x66, 0x69, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x22, 0xe6, 0x07,
	0x0a, 0x06, 0x79, 0x66, 0x69, 0x6e, 0x57, 0x53, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x79, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x12, 0x52, 0x09, 0x64, 0x61, 0x79, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x61, 0x79, 0x48, 0x69, 0x67, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x64, 0x61, 0x79, 0x48, 0x69, 0x67, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x79, 0x4c,
	0x6f, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x64, 0x61, 0x79, 0x4c, 0x6f, 0x77,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74,
	0x72, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69,
	0x6e, 0x67, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0c,
	0x6f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x0b, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x12, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69,
	0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x69, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x62,
	0x69, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x73, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x12, 0x52, 0x09, 0x70, 0x72, 0x69, 0x63, 0x65, 0x48, 0x69, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x32, 0x34, 0x68, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x12, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x32, 0x34, 0x68, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x76, 0x6f,
	0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x12, 0x52, 0x10, 0x76, 0x6f, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x69,
	0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18,
	0x20, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x63, 0x61, 0x70, 0x18, 0x21, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x63, 0x61, 0x70, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x67, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2f, 0x79, 0x66, 0x69, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yfinLive_proto_rawDescOnce sync.Once
	file_yfinLive_proto_rawDescData = file_yfinLive_proto_rawDesc
)

func file_yfinLive_proto_rawDescGZIP() []byte {
	file_yfinLive_proto_rawDescOnce.Do(func() {
		file_yfinLive_proto_rawDescData = protoimpl.X.CompressGZIP(file_yfinLive_proto_rawDescData)
	})
	return file_yfinLive_proto_rawDescData
}

var file_yfinLive_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_yfinLive_proto_goTypes = []interface{}{
	(*YfinWS)(nil), // 0: datahandler.yfinWS
}
var file_yfinLive_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_yfinLive_proto_init() }
func file_yfinLive_proto_init() {
	if File_yfinLive_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_yfinLive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			// switch v := v.(*YfinWS); i {
			// case 0:
			// 	return &v.state
			// case 1:
			// 	return &v.sizeCache
			// case 2:
			// 	return &v.unknownFields
			// default:
			// 	return nil
			// }
			return nil
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yfinLive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_yfinLive_proto_goTypes,
		DependencyIndexes: file_yfinLive_proto_depIdxs,
		MessageInfos:      file_yfinLive_proto_msgTypes,
	}.Build()
	File_yfinLive_proto = out.File
	file_yfinLive_proto_rawDesc = nil
	file_yfinLive_proto_goTypes = nil
	file_yfinLive_proto_depIdxs = nil
}
